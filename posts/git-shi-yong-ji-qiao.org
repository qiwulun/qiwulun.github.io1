#+BEGIN_COMMENT
.. title: git 使用技巧
.. slug: git-shi-yong-ji-qiao
.. date: 2016-11-10 18:01:24 UTC+08:00
.. tags: 
.. category: 
.. link: 
.. description: 
.. type: text
#+END_COMMENT
#+OPTIONS: toc:nil
-----------------------

近几天在Ubuntu系统中使用Netbeans做为开发环境并使用Git作为代码管理的时候，提示代码都被标记为已修改状态，但是进行仔细比较的时候，却发现并没有修改。。

看了以下文章后，根据自身的实际情况对比了下，发现原来我在代码克隆下来的时候，有意的对整个项目目录执行过 chmod 777 ,所以才产生了我现在所遇到的问题！

#+BEGIN_HTML
<!-- TEASER_END --> 
#+END_HTML
 

以下文章参考来源：http://blog.sina.com.cn/s/blog_6accbcc30101fcac.html

stackoverflow上一堆人遇到这个问题，大多数人都是line ending不同导致的，比如windows和mac不同导致的，我试着修改git配置加上core.autocrlf=false（执行git config --system ），发现不行。又修改了core.whitespace=cr-at-eol还是不行。

然后忽然发现我的sourcetree上显示修改的提示是：modified, mode 100644 to mode 100755，忽然想起来，自己曾在项目文件夹上执行过chmod 777，也就是说git认为文件的权限变了，所以将文件标记为changed，但是我们看git diff或比较时，看不到差异。

然后再修改git配置，加上core.filemode=false，发现还是不行，估计是我本地某一步操作错了，导致这个设置没起作用。


git关于文件权限修改引起的冲突及忽略文件权限的办法

在发布项目到线上时，很多时候需要修改文件的权限，如果是使用git版本管理软件来发布的话，那么下次更新线上文件的时候就会提示文件冲突。明明文件没有修改，为什么会冲突呢？原来git把文件权限也算作文件差异的一部分。下面笔者自己做了个简单的例子来演示这种情况。

1、修改版本库的文件的权限，然后使用diff查看下改变。

$ chmod 777 pack.php
$ git diff pack.php
git文件权限修改示例
git文件权限修改示例

可以看到git把文件权限也列入了版本管理。

2、在另外一个地方clone这个版本库，修改pack.php文件，然后提交。

3、在原版本库下面更新内容。

$ git pull 
git文件权限修改引起的冲突
git文件权限修改引起的冲突

可以看到提示冲突。

解决办法：

git中可以加入忽略文件权限的配置，具体如下：

$ git config core.filemode false
这样就设置了忽略文件权限。查看下配置：

$ cat .git/config
git忽略文件权限的配置
git忽略文件权限的配置

这时候再更新代码就OK了。

总结：

笔者个人理解版本管理更注重文件内容，比较好奇为什么git将文件权限列入版本管理，估计是某些场景下有需要。笔者试了下文件所有者和所有组的修改不列入版本管理。另外在windows下git对文件权限是怎么处理的？

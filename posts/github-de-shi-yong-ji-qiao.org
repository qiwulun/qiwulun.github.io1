#+BEGIN_COMMENT
.. title: GitHub 的使用技巧
.. slug: github-de-shi-yong-ji-qiao
.. date: 2016-10-24 14:57:45 UTC+08:00
.. tags: 
.. category: 
.. link: 
.. description: 
.. type: text
#+END_COMMENT
#+TITLE:     GitHub 的使用技巧
#+AUTHOR:    赵骥
#+EMAIL:     zhaoji-001@163.com.cn
#+DATE:      2016-10-24
#+DESCRIPTION: 
#+KEYWORDS: 
#+LANGUAGE:  zh_CN
#+EXPORT_SELECT_TAGS: export
#+EXPORT_EXCLUDE_TAGS: noexport
#+LATEX_CLASS: ctexart
-----------------
#+BEGIN_HTML
<!-- TEASER_END --> 
#+END_HTML


GitHub 的功能， 
- GitHub Pages 静态网站,
- Gist 代码片段
- Repo 代码库
- 评论
- Wiki

* GitHub Pages
  - 面向大众的,
    - 一些感想, 观点
    - 展示给别人的demo等等.
  - 支持 LaTeX 数学公式
    - GitHub不支持对README文本文档中的公式进行MathJax渲染,
    - 因此需要GitHub Pages中实现(Nikola就支持).
  - 支持category, tags等功能, 也是比较方便的地方.

* Repository

- 对各种文本文档的渲染支持, 比如 .md, .rst, .org 等.
  - 很多方面可以直接代替GitHub Pages的功能.
    - 一些工具设置步骤,
    - 问题的解决方案等,
    - 都可以写在 .org 文档里
    - 比起GitHub Pages更简洁,
  - 缺点是目前不支持LaTeX公式渲染
    - (但可以用反斜杠插入希腊字母),
    - 因此涉及数学公式表达的还是得靠GitHub Pages.

- 日志, 目录, Task, List, 心得, 教程, 图片等等,
- 因为是Git, 所以自带历史版本信息,
  - 可以在任何时候用Git工具备份到自己本地电脑上, 着实好用

- 个人偏好 .org 格式,

  - 因为它风格统一, 不会有不同的标准.

  - 而GitHub支持的 .md 与 .rst 可能与其它的标准不兼容.

  - 而且 .org 支持语法高亮(.rst好像GitHub并不支持), 且其它功能如插入图片等都没有问题.

* Gist

 适合写一些代码小片断, 且免费用户也可以将Gist设为Secret. 缺点是当Gist一多, 又没有好的归类, 就不太容易找. 因此现在我更喜欢用Repo来专门存放修改各种code snippets.

* Wiki和评论

也是很好的文档记录工具, 也有很多使用的trick(插入图片也可以用引用评论中图片的方式实现). 但评论不能直接用Git工具管理和备份, 因此我觉得并不如Repo实在, 所以自己用得就比较少.

# -*- mode: Org; org-download-image-dir: "../images"; -*-
#+TITLE: 用 docker 来打包 spacemacs
#+DATE: 2016-12-21 22:41:18 
#+TAGS: 
#+CATEGORY: 
#+LINK: 
#+DESCRIPTION: 
#+LAYOUT : post


* org-mode

** figure

*** ditaa
#+begin_src ditaa :file ./ditaa.png :cmdline -r -s 0.8

    +-----------+        +---------+  
    |    PLC    |        |         |                
    |  Network  +<------>+   PLC   +<---=---------+ 
    |    cRED   |        |  c707   |              | 
    +-----------+        +----+----+              | 
                              ^                   | 
                              |                   | 
                              |  +----------------|-----------------+
                              |  |                |                 |
                              v  v                v                 v
      +----------+       +----+--+--+      +-------+---+      +-----+-----+       Windows clients
      |          |       |          |      |           |      |           |      +----+      +----+
      | Database +<----->+  Shared  +<---->+ Executive +<-=-->+ Operator  +<---->|cYEL| . . .|cYEL|
      |   c707   |       |  Memory  |      |   c707    |      | Server    |      |    |      |    |
      +--+----+--+       |{d} cGRE  |      +------+----+      |   c707    |      +----+      +----+
         ^    ^          +----------+             ^           +-------+---+
         |    |                                   |                        
         |    +--------=--------------------------+                    
         v                                                             
+--------+--------+                                                         
|                 |                                                         
| Millwide System |            -------- Data ---------                      
| cBLU            |            --=----- Signals ---=--                      
+-----------------+
#+end_src


*** graphviz
#+begin_src dot :file some_filename.png :cmdline -Kdot -Tpng
digraph G {
  size="8,6"
  ratio=expand
  edge [dir=both]
  plcnet [shape=box, label="PLC Network"]
  subgraph cluster_wrapline {
    label="Wrapline Control System"
    color=purple
    subgraph {
    rank=same
    exec
    sharedmem [style=filled, fillcolor=lightgrey, shape=box]
    }
    edge[style=dotted, dir=none]
    exec -> opserver
    exec -> db
    plc -> exec
    edge [style=line, dir=both]
    exec -> sharedmem
    sharedmem -> db
    plc -> sharedmem
    sharedmem -> opserver
  }
  plcnet -> plc [constraint=false]
  millwide [shape=box, label="Millwide System"]
  db -> millwide

  subgraph cluster_opclients {
    color=blue
    label="Operator Clients 示例"
    rankdir=LR
    labelloc=b
    node[label=client]
    opserver -> client1
    opserver -> client2
    opserver -> client3
  }
}
  #+END_SRC


*** plantuml

   test

#+BEGIN_SRC plantuml :file ./plantuml.png
  Alice -> Bob: synchronous call
  Alice ->> Bob: asynchronous call
  Alice ->> Bob: asynchronous call

#+END_SRC



*** asymptote 
   [2016-12-21 三 01:30] 
   
**** 三维，记得要带 =:cmdline -render=0=
     不然要用显卡，不适合docker

    test 

 #+begin_src asymptote :file ./asymptote.png :cmdline -render=0
 import three;

 size(560,320,IgnoreAspect);
 size3(140,80,15);
 currentprojection=perspective(-2,20,10,up=Y);
 currentlight=White;

 real a=-0.4;
 real b=0.95;
 real y1=-5;
 real y2=-3y1/2;
 path A=(a,0){dir(10)}::{dir(89.5)}(0,y2);
 path B=(0,y1){dir(88.3)}::{dir(20)}(b,0);
 real c=0.5*a;
 pair z=(0,2.5);
 transform t=scale(1,15);
 transform T=inverse(scale(t.yy,t.xx));
 path[] g=shift(0,1.979)*scale(0.01)*t*
   texpath(Label("{\it symptote}",z,0.25*E+0.169S,fontsize(24pt)));
 pair w=(0,1.7);
 pair u=intersectionpoint(A,w-1--w);

 real h=0.25*linewidth();
 real hy=(T*(h,h)).x;
 g.push(t*((a,hy)--(b,hy)..(b+hy,0)..(b,-hy)--(a,-hy)..(a-hy,0)..cycle));
 g.push(T*((h,y1)--(h,y2)..(0,y2+h)..(-h,y2)--(-h,y1)..(0,y1-h)..cycle));
 g.push(shift(0,w.y)*t*((u.x,hy)--(w.x,hy)..(w.x+hy,0)..(w.x,-hy)--(u.x,-hy)..(u.x-hy,0)..cycle));
 real f=0.75;
 g.push(point(A,0)--shift(-f*hy,f*h)*A--point(A,1)--shift(f*hy,-f*h)*reverse(A)--cycle);
 g.push(point(B,0)--shift(f*hy,-f*h)*B--point(B,1)--shift(-f*hy,f*h)*reverse(B)--cycle);

 triple H=-0.1Z;
 material m=material(lightgray,shininess=1.0);

 for(path p : g)
   draw(extrude(p,H),m);

 surface s=surface(g);
 draw(s,red,nolight);
 draw(shift(H)*s,m);
 #+end_src

 #+RESULTS:
 [[file:./asymptote.png]]

**** 二维 带变量
 #+header: :var n=8
 #+begin_src asymptote :file ./asy-tile2D.png
 import geometry; 

 size(7cm,0);

 picture pic;
 // on définit une courbe reliant les points (0,1) et (1,0)
 path c=(0,1){dir(-5)}..{dir(-5)}(1,0);
 // à l'aide de trois rotations, on définit 
 // le motif (dans un carré de 2 sur 2) ...
 path motif=buildcycle(c,rotate(90)*c,
                       rotate(180)*c,rotate(-90)*c);
 filldraw(pic,motif,lightred+white,black);
 // ... et une double boucle pour "paver" 
 // suivant (Ox) et suivant (Oy)
 for(int i=0; i<n; ++i)
   {
     for(int j=0; j<n; ++j)
       {
         add(shift(2*i,2*j)*pic);
       }
   }
 #+end_src

 #+RESULTS:
 [[file:images/asy-tile.png]]


** pdf

*** export
    test:直接输出这个 pdf

*** view
   [2016-12-20 二 23:54] 

   test:在emacs中打开这个pdf,  =SPC m n= 可以转换成夜间模式
** html-blog 
*** DONE nikola
    CLOSED: [2016-12-21 三 22:42]
   在 dockerfile 中定义了 LANG 等 local 就可以用了

* DONE 翻墙
  CLOSED: [2016-12-21 三 22:39]

** google translate
=SPC x g l= 选择 en 到 zh-CN


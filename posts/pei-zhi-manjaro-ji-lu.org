# -*- mode: Org; org-download-image-dir: "../images"; -*-
#+BEGIN_COMMENT
.. title: 配置 Manjaro 纪录
.. slug: pei-zhi-manjaro-ji-lu
.. date: 2017-01-22 14:08:43 UTC+08:00
.. tags: 
.. category: 
.. link: 
.. description: 
.. type: text
#+END_COMMENT
* Manjaro 优点

- 非常稳定，没有ubuntu和openSuSE在我本子上的闪屏bug，也没有其他莫名其妙的bug。
- 驱动完善，设置里一键就安装好了。
- 中文支持也非常好，字体好看和ubuntu不相上下，konsole里默认配置也不会出现中文显示不全的bug（号称稳定、kde支持最好的openSuSE都有这个问题），chrome里中文字体也不虚，无需配置。
- aur里只要你想要的软件都有，什么搜狗、wineqq-intl、微信，FeelUOwn，ss-qt5（这貌似是arch的 优点），直接一条命令就装上了，笑看其他发行版找PPA找源找二进制包。


自用的话推荐manjaro，我个人推荐i3wm版本，i3wm版本使用了lightdm，一个图形化
display manager。i3wm版本开箱即用的体验比bspwm版本更好，首先是因为i3本身比bspwm
更健全，另外i3wm的默认安装带的软件更多。

此外还有一个bspwm版本，是manjaro社区的一个大神做的，这个版本的目标是极致的轻量化
和高效的图形界面体验。i3和bspwm都是轻量级并具有高度可定制性的窗口管理器，配合
conky食用更佳。
* 安装
- 使用 rufus 来生成安装 U 盘

- 安装界面选择 Install Manjaro (Non-free Driver)






* 配置
编辑 /etc/pacman.d/mirrorlist， 在文件的最顶端添加： Server = https://mirrors.tuna.tsinghua.edu.cn/archlinux/$repo/os/$arch

更新软件包缓存： sudo pacman -Syy
* docker
** Installation
 For the normal package a simple

 =$ sudo pacman -S docker=

 is all that is needed.
rtu
 For the AUR package execute:

 =$ yaourt -S docker-git=

 The instructions here assume yaourt is installed. See Arch User Repository for information on building and installing packages from the AUR if you have not done so before.
** Starting Docker
 There is a systemd service unit created for docker. To start the docker service:

 =$ sudo systemctl start docker=

 To start on system boot:

 =$ sudo systemctl enable docker=
* 自行配置桌面环境
选择小巧的、占用内存少的独立式组件，它们不依赖其他东西，但是可以顺利地协同运行。
** 选择窗口管理器

 尽管我们要使用单个的独立式程序来打造定制的桌面环境，但是 X Windows System（桌面的基本图形层）里面还是有一些标准，可以确保它们能够顺利地协同运行。首先，不妨看一看窗口管理器方面的几个选择。

 1. Openbox ::
      小巧，快速，LXDE 是一种使用 Openbox 来管理窗口的轻量级桌面环境， 网址： http://www.openbox.org
 2. i3 ::
      Openbox 是一种传统的鼠标操作的窗口管理器，相比之下，i3 完全离不开键盘快捷方式。另外，i3 是一种平铺式窗口管理器。 网址： http://i3wm.org 
 3. Awesome ::
       Awesome 是另一种设计时就想到键盘使用的轻量级窗口管理器，使用 Lua 定制，网址： http://awesome.naquadah.org
 4. JWM ::
      JWM 是用普通 C 编写而成的，使用基本的 X 库，所以它的依赖项非常少，很容易编译。它旨在最大限度地利用内存有限的旧计算机，但是如果你就想挑战一下自己，它是个不错的选择。JWM 含有自己的简单面板，但是你可能想要更易配置、外观更漂亮的面板，稍后我们会探讨。 网址： http://www.joewing.net/projects/jwm/
** 面板、文件管理器和额外组件
*** 漂亮的面板（用于启动和管理程序）

  1. Cairo-Dock ::  Cairo-Dock 提供的面板在外观上酷似 Mac OS X 的停靠栏――网址： http://glx-dock.org 首次启动后，Cairo-Dock 会询问你是否想使用 OpenGL。这在物理硬件上很有用，让停靠栏的效果显得更流畅，但是在 VirtualBox 里面，它会带来问题，所以这种情况下最好还是让它处于被禁用的状态。

  2. Docky ::
        网址： http://wiki.go-docky.com

  Docky 非常类似 Cairo-Dock，不过它使用 Mono，因此增添了一点额外开销。但是它也非常完善和漂亮，能够获得上述类似 OS X 的 3D 外观。Docky 出现在各大发行版中；安装完毕后，只要在命令提示符下输入“docky”，就可以启动它。其默认配置相当简单；你只会看到用来配置 docky 的锚图标，以及运行中的程序图标。不过，可以将这些图标变成启动器，只需右击图标，选择将它们固定到停靠栏上。然后，即便程序没有运行，它们也依然在那里。

  有了 Docky，还可以添加额外组件，比如天气小应用程序和电池监视工具――点击锚图标，即可调出配置框，然后选择 Docklets 标签即可显示列表。选择一个你喜欢的，然后点击加号（+）按钮，就可以将它添加到停靠栏的右边。
*** 文件管理器
  3. PCManFM ::
        网址： http://wiki.lxde.org/en/PCManFM

  文件管理器在 Linux 界多得可以抓一把随便挑；大多数提供了很少的功能。PCManFM 用于 LXDE 桌面中，它是名气最大的文件管理器之一：它比 Gnome 和 KDE 中所用的“重量级”文件管理器来得轻便，但是功能仍相当强劲，能够处理你需要的 99% 的任务。它在设计方面也不想试图过于标新立异，而是选择了一种熟悉的布局，谁都可以迅速上手。另外，它几乎无所不在，出现在各大发行版中。

  4. XFE ::
        网址： http://roland65.free.fr/xfe/

  这与 Xfce 没有半毛关系；它其实是一种非常轻巧的文件管理器，使用 FOX 图形化工具包。开发人员称之为“所有喜欢轻巧快速的 Unix 爱好者首选的文件管理器”；虽然与同样占用很少资源的其他程序相比，XFE 并不提供许多功能特性，可是它有一个好处：仍在不断开发之中。因而，它不难编译，也很容易在主流的 Linux 发行版中找到。

  XFE是一款结实又小巧的文件管理器，外观并不特别出彩，但是很实用。
*** 合成器和背景

1. 合成管理器 :: 这样一来，窗口出现时，就能够获得阴影和微妙动画之类的效果。最出色的一个合成管理器就是 Compton。它还非常易于使用：只要启动你的窗口管理器，然后启动 Compton，即可开始使用特效。

2. 桌面墙纸 :: 大多数轻量级窗口管理器并不直接提供添加桌面墙纸的方法，所以你需要找到另一个墙纸工具。这方面一个特别有用的工具就是 Feh，这个命令行驱动的图像查看器还能设置“根窗口”（root window）图像。没错，这是“根”在 Unix 用语中的另一种用法，另外的用法还有超级管理员用户和文件系统顶层。用 X 术语来说，根窗口实际上就是背景，所以如果你为其应用一个图像，就可以设置桌面墙纸。
*** 把一切组件连接起来

  好了，不妨开始做有意思的部分！我们现在要把这一堆组件变成一个完全实用的桌面环境。在这里，我们将使用 Openbox 作为窗口管理器、Docky 作为面板、PCManFM 作为文件管理器，然后添加 Compton 和 Feh，让桌面环境看起来可爱、漂亮。

  由于这些都是独立的程序，我们需要创建一个脚本，让它们都按正确的顺序来运行。以根用户身份，在 /usr/local/bin/mydesk下创建一个文件，比如：

  - sudo nano -w /usr/local/bin/mydesk

  输入下列内容，使用Ctrl+O组合键保存，然后按Ctrl+X组合键，退出Nano编辑工具。

  - #!/bin/sh
  - docky &
  - pcmanfm &
  - feh --bg-fill /home/user/desktop.jpg
  - compton -c --shadow-exclude 'n:e:Docky' &
  - openbox

  你还需要让这个文件成为可执行文件，为此使用sudo chmod +x /usr/local/bin/mydesk。该脚本启动一堆程序，先从 Docky 和 PCManFM 开始。这些程序后面的“&”符号表明，我们想要在后台运行这些程序，而不是让脚本等待每个程序关闭。
*** 登录管理器
登录管理器（输入用户名和密码的那个屏幕）启动其我们自己的桌面环境，我们称之为 MyDesk。

以根用户身份，创建含有下列内容的文本文件 /usr/share/xsessions/mydesk.desktop：

  - [Desktop Entry]
  - Name=MyDesk
  - Comment=Custom desktop
  - Exec=/usr/local/bin/mydesk
  - TryExec=/usr/local/bin/mydesk
  - Type=XSession

  一旦你为会话创建好了启动脚本和 .desktop 文件，它就会出现在登录管理器中。

  现在退出当前桌面，再登录屏幕，选择 MyDesk 作为你的会话。输入你的用户名和密码，哇！你的定制桌面环境就会出现！看一下文章开始的屏幕截图：在这里，我们点击了左下方的锚图标，选择了选项中的“面板模式”(让它占用屏幕的整个宽度)，然后应用了 Matte 主题。我们还在右边添加了一个工作空间切换器 Docklet。

  请注意：Docky 并不包括一个传统的“开始”程序菜单；相反，可以在桌面上右击鼠标，选择“终端”，打开命令行窗口。输入你想添加到面板中的某个程序（比如“firefox”或“libreoffice”），该程序启动后，相应图标就会出现在面板上。右击图标，选择“固定”，那样即使该程序没有运行，启动器也依然在那里。想要退出定制桌面，只要在桌面上任何地方右击鼠标，选择“退出”。（想对 Openbox 窗口管理器实行精细控制，有必要安装 Obconf，然后从右击桌面菜单中选择它。）


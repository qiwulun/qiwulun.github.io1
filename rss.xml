<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="assets/xml/rss.xsl" media="all"?><rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0"><channel><title>赵骥's Site</title><link>https://qiwulun.github.io/</link><description>This is Zhao Ji's blog site.</description><atom:link type="application/rss+xml" rel="self" href="https://qiwulun.github.io/rss.xml"></atom:link><language>zh_cn</language><lastBuildDate>Mon, 26 Dec 2016 12:29:02 GMT</lastBuildDate><generator>https://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>在 windows 上运行 docker GUI</title><link>https://qiwulun.github.io/posts/zai-windows-shang-yun-xing-docker-gui.html</link><dc:creator>Zhao JI</dc:creator><description>&lt;div id="table-of-contents"&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id="text-table-of-contents"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://qiwulun.github.io/posts/zai-windows-shang-yun-xing-docker-gui.html#sec-1"&gt;准备工作&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://qiwulun.github.io/posts/zai-windows-shang-yun-xing-docker-gui.html#sec-2"&gt;运行docker&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://qiwulun.github.io/posts/zai-windows-shang-yun-xing-docker-gui.html#sec-2-1"&gt;Mobaxterm －－ Start Local terminal&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
主要参考的这一篇，从第 14 页开始
&lt;/p&gt;

&lt;p&gt;
&lt;a href="http://journals.plos.org/plosone/article/file?type=supplementary&amp;amp;id=info:doi/10.1371/journal.pone.0152686.s001"&gt;http://journals.plos.org/plosone/article/file?type=supplementary&amp;amp;id=info:doi/10.1371/journal.pone.0152686.s001&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
&lt;a href="https://github.com/kristiyanto/GUIdock"&gt;https://github.com/kristiyanto/GUIdock&lt;/a&gt;
&lt;/p&gt;
&lt;div id="outline-container-sec-1" class="outline-2"&gt;
&lt;h2 id="sec-1"&gt;准备工作&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-1"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;安装 docker toolbox （也就是用virtualbox的那个）
&lt;/li&gt;
&lt;li&gt;安装 Mobaxterm 自带 X11 转发协议，开心
&lt;/li&gt;
&lt;li&gt;防火墙
&lt;ul class="org-ul"&gt;
&lt;li&gt;windows 防火墙──允许应用或功能通过防火墙──把xwin&lt;sub&gt;mobax这种和Mobaxterm有关的全勾上&lt;/sub&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;IP
&lt;ul class="org-ul"&gt;
&lt;li&gt;打开 Docker QuickStart Terminal
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;code&gt;docker-machine inspect default&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Docker Machine 的 IP ="IPAddress": "192.168.99.100"=
&lt;/li&gt;
&lt;li&gt;Docker Client 的 IP ="HostOnlyCIDR": "192.168.99.1/24"=
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-sec-2" class="outline-2"&gt;
&lt;h2 id="sec-2"&gt;运行docker&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-2"&gt;
&lt;/div&gt;&lt;div id="outline-container-sec-2-1" class="outline-3"&gt;
&lt;h3 id="sec-2-1"&gt;Mobaxterm －－ Start Local terminal&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-2-1"&gt;
&lt;ol class="org-ol"&gt;
&lt;li&gt;SSH with X11 forwarding to Docker host.
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;code&gt;ssh -X docker@DockerMachineIPAdress&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;这里是 &lt;code&gt;ssh -X docker@192.168.99.100&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Login with password “tcuser”
&lt;ul class="org-ul"&gt;
&lt;li&gt;用户名 &lt;code&gt;docker&lt;/code&gt; 密码 &lt;code&gt;tcuser&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Pull latest image of GUIdock from repository.
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;code&gt;docker pull kristiyanto/guidock&lt;/code&gt;  
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Run the GUIdock image by typing the following command in terminal up.. Once
loaded, a Cytoscape GUI Window pops 
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;code&gt;docker run ­ti ­e DISPLAY=WindowsIPAddress:0 kristiyanto/guidock&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;这里是 &lt;code&gt;docker run ­ti ­e DISPLAY=192.168.99.1:0 kristiyanto/guidock&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="example"&gt;
-ti : To enable docker container in interactive mode.
-e : To set up the DISPLAY environment variable into the docker container so that the
GUI can be sent to Windows machine.
IP address : Windows private address (VirtualBox’s interface), see Preparation Section to check
IP Address. This address should be reachable by Docker Machine.
Port Number : Port number of X11 is 0 (zero).
&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description><guid>https://qiwulun.github.io/posts/zai-windows-shang-yun-xing-docker-gui.html</guid><pubDate>Mon, 26 Dec 2016 12:07:43 GMT</pubDate></item><item><title>python 可视化库</title><link>https://qiwulun.github.io/posts/python-ke-shi-hua-ku.html</link><dc:creator>Zhao JI</dc:creator><description>&lt;div id="table-of-contents"&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id="text-table-of-contents"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://qiwulun.github.io/posts/python-ke-shi-hua-ku.html#sec-1"&gt;三维── Mayavi&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://qiwulun.github.io/posts/python-ke-shi-hua-ku.html#sec-2"&gt;渲染 blender&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://qiwulun.github.io/posts/python-ke-shi-hua-ku.html#sec-3"&gt;动画──用Python和MoviePy将数据动态可视化&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://qiwulun.github.io/posts/python-ke-shi-hua-ku.html#sec-4"&gt;类型定义──Traits 为 python 添加类型定义&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
在这里书写你的文章。
&lt;/p&gt;
&lt;div id="outline-container-sec-1" class="outline-2"&gt;
&lt;h2 id="sec-1"&gt;三维── Mayavi&lt;/h2&gt;
&lt;/div&gt;
&lt;div id="outline-container-sec-2" class="outline-2"&gt;
&lt;h2 id="sec-2"&gt;渲染 blender&lt;/h2&gt;
&lt;/div&gt;
&lt;div id="outline-container-sec-3" class="outline-2"&gt;
&lt;h2 id="sec-3"&gt;动画──用Python和MoviePy将数据动态可视化&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-3"&gt;
&lt;p&gt;
&lt;a href="http://python.jobbole.com/81185/"&gt;http://python.jobbole.com/81185/&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-sec-4" class="outline-2"&gt;
&lt;h2 id="sec-4"&gt;类型定义──Traits 为 python 添加类型定义&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-4"&gt;
&lt;p&gt;
&lt;a href="https://www.kancloud.cn/wizardforcel/hyry-studio-scipy/129082"&gt;https://www.kancloud.cn/wizardforcel/hyry-studio-scipy/129082&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</description><guid>https://qiwulun.github.io/posts/python-ke-shi-hua-ku.html</guid><pubDate>Sun, 25 Dec 2016 04:29:21 GMT</pubDate></item><item><title>effective python 阅读笔记1</title><link>https://qiwulun.github.io/posts/effective-python-yue-du-bi-ji-1.html</link><dc:creator>Zhao JI</dc:creator><description>&lt;div id="table-of-contents"&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id="text-table-of-contents"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://qiwulun.github.io/posts/effective-python-yue-du-bi-ji-1.html#sec-1"&gt;Chapter1: Pythonic Thinking&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://qiwulun.github.io/posts/effective-python-yue-du-bi-ji-1.html#sec-2"&gt;Chapter        3:        Classes        and        Inheritance&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://qiwulun.github.io/posts/effective-python-yue-du-bi-ji-1.html#sec-2-1"&gt;Item        22:        Prefer        Helper        Classes        Over        Bookkeeping        with        Dictionaries        and        Tuples&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://qiwulun.github.io/posts/effective-python-yue-du-bi-ji-1.html#sec-2-2"&gt;Item        23:        Accept        Functions        for        Simple        Interfaces        Instead        of        Classes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://qiwulun.github.io/posts/effective-python-yue-du-bi-ji-1.html#sec-2-3"&gt;Item        1:        Know        Which        Version        of        Python        You’re        Using&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://qiwulun.github.io/posts/effective-python-yue-du-bi-ji-1.html#sec-2-4"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://qiwulun.github.io/posts/effective-python-yue-du-bi-ji-1.html#sec-3"&gt;Chapter        2: Functions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://qiwulun.github.io/posts/effective-python-yue-du-bi-ji-1.html#sec-4"&gt;Chapter        3:        Classes        and        Inheritance&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://qiwulun.github.io/posts/effective-python-yue-du-bi-ji-1.html#sec-5"&gt;Chapter        4:        Metaclasses        and        Attributes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://qiwulun.github.io/posts/effective-python-yue-du-bi-ji-1.html#sec-6"&gt;Chapter        5:        Concurrency        and        Parallelism&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://qiwulun.github.io/posts/effective-python-yue-du-bi-ji-1.html#sec-7"&gt;Chapter        6:        Built-in        Modules&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://qiwulun.github.io/posts/effective-python-yue-du-bi-ji-1.html#sec-8"&gt;Chapter        7:        Collaboration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://qiwulun.github.io/posts/effective-python-yue-du-bi-ji-1.html#sec-9"&gt;Chapter        8:        Production&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
&lt;a href="http://www.effectivepython.com"&gt;http://www.effectivepython.com&lt;/a&gt;
&lt;/p&gt;

&lt;div id="outline-container-sec-1" class="outline-2"&gt;
&lt;h2 id="sec-1"&gt;Chapter1: Pythonic Thinking&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-1"&gt;
&lt;p&gt;
The Python community has come to use the adjective Pythonic to describe code
that follows a particular style. The idioms of Python have emerged over time
through experience using the language and working with others. This chapter
covers the best way to do the most common things in Python.
Item        1:        Know        Which        Version        of        Python        You’re        Using
Item        2:        Follow        the        PEP        8        Style        Guide
Item        3:        Know        the        Differences        Between        bytes,        str,        and        unicode
Item        4:        Write        Helper        Functions        Instead        of        Complex        Expressions
Item        5:        Know        How        to        Slice        Sequences
Item        6:        Avoid        Using        start,        end,        and        stride        in        a        Single        Slice
Item        7:        Use        List        Comprehensions        Instead        of        map        and        filter
Item        8:        Avoid        More        Than        Two        Expressions        in        List        Comprehensions
Item        9:        Consider        Generator        Expressions        for        Large        Comprehensions
Item        10:        Prefer        enumerate        Over        range
Item        11:        Use        zip        to        Process        Iterators        in        Parallel
Item        12:        Avoid        else        Blocks        After        for        and        while        Loops
Item        13:        Take        Advantage        of        Each        Block        in        try/except/else/finally 
Item        14:        Prefer        Exceptions        to        Returning        None
Item        15:        Know        How        Closures        Interact        with        Variable        Scope
Item        16:        Consider        Generators        Instead        of        Returning        Lists
Item        17:        Be        Defensive        When        Iterating        Over        Arguments
Item        18:        Reduce        Visual        Noise        with        Variable        Positional        Arguments
Item        19:        Provide        Optional        Behavior        with        Keyword        Arguments
Item        20:        Use        None        and        Docstrings        to        Specify        Dynamic        Default        Arguments
Item        21:        Enforce        Clarity        with        Keyword-Only        Arguments
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-2" class="outline-2"&gt;
&lt;h2 id="sec-2"&gt;Chapter        3:        Classes        and        Inheritance&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-2"&gt;
&lt;/div&gt;&lt;div id="outline-container-sec-2-1" class="outline-3"&gt;
&lt;h3 id="sec-2-1"&gt;Item        22:        Prefer        Helper        Classes        Over        Bookkeeping        with        Dictionaries        and        Tuples&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-2-1"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Avoid        making        dictionaries        with        values        that        are        other        dictionaries        or        long        tuples.
&lt;/li&gt;
&lt;li&gt;Use        namedtuple        for        lightweight,        immutable        data        containers        before        you        need        the
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
flexibility        of        a        full        class.
&lt;/p&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Move        your        bookkeeping        code        to        use        multiple        helper        classes        when        your        internal        state
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
dictionaries        get        complicated.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-2-2" class="outline-3"&gt;
&lt;h3 id="sec-2-2"&gt;Item        23:        Accept        Functions        for        Simple        Interfaces        Instead        of        Classes&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-2-2"&gt;
&lt;p&gt;
Item        24:        Use        @classmethod        Polymorphism        to        Construct        Objects        GenericallyItem        25:        Initialize        Parent        Classes        with        super
Item        26:        Use        Multiple        Inheritance        Only        for        Mix-in        Utility        Classes
Item        27:        Prefer        Public        Attributes        Over        Private        Ones
Item        28:        Inherit        from        collections.abc        for        Custom        Container        Types
Chapter        4:        Metaclasses        and        Attributes
Item        29:        Use        Plain        Attributes        Instead        of        Get        and        Set        Methods
&lt;/p&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Define        new        class        interfaces        using        simple        public        attributes,        and        avoid        set        and        get
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
methods.
&lt;/p&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Use        @property        to        define        special        behavior        when        attributes        are        accessed        on        your
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
objects,        if        necessary.
&lt;/p&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Follow        the        rule        of        least        surprise        and        avoid        weird        side        effects        in        your        @property
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
methods.
&lt;/p&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Ensure        that        @property        methods        are        fast;        do        slow        or        complex        work        using        normal
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
methods.
Item        30:        Consider        @property        Instead        of        Refactoring        Attributes
&lt;/p&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;I        especially        like        @property        because        it        lets        you        make        incremental        progress        toward        a better        data        model        over        time.        Reading        the        Bucket        example        above,        you        may        have        thought to        yourself,        “fill        and        deduct        should        have        been        implemented        as        instance        methods        inthe        first        place.”        Although        you’re        probably        right        (see        Item        22:        “Prefer        Helper        Classes        Over Bookkeeping        with        Dictionaries        and        Tuples”),        in        practice        there        are        many        situations        in which        objects        start        with        poorly        defined        interfaces        or        act        as        dumb        data        containers.        This happens        when        code        grows        over        time,        scope        increases,        multiple        authors        contribute        without anyone        considering        long-term        hygiene,        etc. @property        is        a        tool        to        help        you        address        problems        you’ll        come        across        in        real-world code.        Don’t        overuse        it.        When        you        find        yourself        repeatedly        extending        @property methods,        it’s        probably        time        to        refactor        your        class        instead        of        further        paving        over        your code’s        poor        design.
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
Item        31:        Use        Descriptors        for        Reusable        @property        Methods
Item        32:        Use        &lt;span class="underline"&gt;&lt;span class="underline"&gt;getattr&lt;/span&gt;&lt;/span&gt;,        &lt;span class="underline"&gt;&lt;span class="underline"&gt;getattribute&lt;/span&gt;&lt;/span&gt;,        and        &lt;span class="underline"&gt;&lt;span class="underline"&gt;setattr&lt;/span&gt;&lt;/span&gt; for        Lazy
Attributes
Item        33:        Validate        Subclasses        with        Metaclasses
Item        34:        Register        Class        Existence        with        Metaclasses
Item        35:        Annotate        Class        Attributes        with        Metaclasses
Chapter        5:        Concurrency        and        Parallelism
Item        36:        Use        subprocess        to        Manage        Child        Processes
Item        37:        Use        Threads        for        Blocking        I/O,        Avoid        for        Parallelism
Item        38:        Use        Lock        to        Prevent        Data        Races        in        Threads
Item        39:        Use        Queue        to        Coordinate        Work        Between        Threads
Item        40:        Consider        Coroutines        to        Run        Many        Functions        Concurrently
Item        41:        Consider        concurrent.futures        for        True        Parallelism
Chapter        6:        Built-in        Modules
Item        42:        Define        Function        Decorators        with        functools.wraps
Item        43:        Consider        contextlib        and        with        Statements        for        Reusable        try/finally
Behavior
Item        44:        Make        pickle        Reliable        with        copyreg
Item        45:        Use        datetime        Instead        of        time        for        Local        Clocks
Item        46:        Use        Built-in        Algorithms        and        Data        Structures
Item        47:        Use        decimal        When        Precision        Is        Paramount
Item        48:        Know        Where        to        Find        Community-Built        Modules
Chapter        7:        Collaboration
Item        49:        Write        Docstrings        for        Every        Function,        Class,        and        Module
Item        50:        Use        Packages        to        Organize        Modules        and        Provide        Stable        APIsItem        51:        Define        a        Root        Exception        to        Insulate        Callers        from        APIs
Item        52:        Know        How        to        Break        Circular        Dependencies
Item        53:        Use        Virtual        Environments        for        Isolated        and        Reproducible        Dependencies
Chapter        8:        Production
Item        54:        Consider        Module-Scoped        Code        to        Configure        Deployment        Environments
Item        55:        Use        repr        Strings        for        Debugging        Output
Item        56:        Test        Everything        with        unittest
Item        57:        Consider        Interactive        Debugging        with        pdb
Item        58:        Profile        Before        Optimizing
Item        59:        Use        tracemalloc        to        Understand        Memory        Usage        and        Leaks
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-sec-2-3" class="outline-3"&gt;
&lt;h3 id="sec-2-3"&gt;Item        1:        Know        Which        Version        of        Python        You’re        Using&lt;/h3&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-2-4" class="outline-3"&gt;
&lt;h3 id="sec-2-4"&gt;&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-2-4"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Python’s syntax makes it all too easy to write single-line expressions that
are overly complicated and difficult to read.
&lt;/li&gt;
&lt;li&gt;Move complex expressions into helper functions, especially if you need to use
the same logic repeatedly.
&lt;/li&gt;
&lt;li&gt;The if/else expression provides a more readable alternative to using Boolean
operators like or and and in expressions.
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-sec-3" class="outline-2"&gt;
&lt;h2 id="sec-3"&gt;Chapter        2: Functions&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-3"&gt;
&lt;p&gt;
Functions in Python have a variety of extra features that make a programmer’s
life easier. Some are similar to capabilities in other programming languages,
but many are unique to Python. This chapter covers how to use functions to
clarify intention, promote reuse, and reduce bugs.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-4" class="outline-2"&gt;
&lt;h2 id="sec-4"&gt;Chapter        3:        Classes        and        Inheritance&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-4"&gt;
&lt;p&gt;
Python is an object-oriented language. Getting things done in Python often
requires writing new classes and defining how they interact through their
interfaces and hierarchies. This chapter covers how to use classes and
inheritance to express your intended behaviors with objects.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-5" class="outline-2"&gt;
&lt;h2 id="sec-5"&gt;Chapter        4:        Metaclasses        and        Attributes&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-5"&gt;
&lt;p&gt;
Metaclasses and dynamic attributes are powerful Python features. However, they
also enable you to implement extremely bizarre and unexpected behaviors. This
chapter covers the common idioms for using these mechanisms to ensure that you
follow the rule of least surprise.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-6" class="outline-2"&gt;
&lt;h2 id="sec-6"&gt;Chapter        5:        Concurrency        and        Parallelism&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-6"&gt;
&lt;p&gt;
Python        makes        it        easy        to        write        concurrent        programs        that        do        many        different        things
seemingly        at        the        same        time.        Python        can        also        be        used        to        do        parallel        work        through        system
calls,        subprocesses,        and        C-extensions.        This        chapter        covers        how        to        best        utilize        Python        in
these        subtly        different        situations.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-7" class="outline-2"&gt;
&lt;h2 id="sec-7"&gt;Chapter        6:        Built-in        Modules&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-7"&gt;
&lt;p&gt;
Python        is        installed        with        many        of        the        important        modules        that        you’ll        need        to        write        programs.
These        standard        packages        are        so        closely        intertwined        with        idiomatic        Python        that        they        may        as
well        be        part        of        the        language        specification.        This        chapter        covers        the        essential        built-in
modules.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-8" class="outline-2"&gt;
&lt;h2 id="sec-8"&gt;Chapter        7:        Collaboration&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-8"&gt;
&lt;p&gt;
Collaborating        on        Python        programs        requires        you        to        be        deliberate        about        how        you        write        your
code.        Even        if        you’re        working        alone,        you’ll        want        to        understand        how        to        use        modules        written
by        others.        This        chapter        covers        the        standard        tools        and        best        practices        that        enable        people        to
work        together        on        Python        programs.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-9" class="outline-2"&gt;
&lt;h2 id="sec-9"&gt;Chapter        8:        Production&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-9"&gt;
&lt;p&gt;
Python        has        facilities        for        adapting        to        multiple        deployment        environments.        It        also        has        built-in
modules        that        aid        in        hardening        your        programs        and        making        them        bulletproof.        This        chapter
covers        how        to        use        Python        to        debug,        optimize,        and        test        your        programs        to        maximize        quality
and        performance        at        runtime.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>books</category><category>reading</category><guid>https://qiwulun.github.io/posts/effective-python-yue-du-bi-ji-1.html</guid><pubDate>Sat, 24 Dec 2016 06:21:19 GMT</pubDate></item><item><title>代码整洁之道──阅读笔记1</title><link>https://qiwulun.github.io/posts/dai-ma-zheng-ji-zhi-dao-yue-du-bi-ji-1.html</link><dc:creator>Zhao JI</dc:creator><description>&lt;div id="table-of-contents"&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id="text-table-of-contents"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://qiwulun.github.io/posts/dai-ma-zheng-ji-zhi-dao-yue-du-bi-ji-1.html#sec-1"&gt;命名&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
软件质量，不但依赖于架构及项目管理，而且与代码质量紧密相关。这一点，无论是敏捷开发流派还是传统开发流派，都不得不承认。
&lt;/p&gt;

&lt;p&gt;
本书提出一种观念：代码质量与其整洁度成正比。干净的代码，既在质量上较为可靠，也为后期维护、升级奠定了良好基础。作为编程领域的佼佼者，本书作者给出了一系列行之有效的整洁代码操作实践。这些实践在本书中体现为一条条规则（或称“启示”），并辅以来自现实项目的正、反两面的范例。只要遵循这些规则，就能编写出干净的代码，从而有效提升代码质量。
&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;
归置良好的需求就像代码一样正式，也能作为代码的可执行测试来使用
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
&lt;p&gt;
勒布朗 (leBlanc) 法则:稍后等于不干 (Later equals never)
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;能通过所有测试
&lt;/li&gt;
&lt;li&gt;没有重复代码
&lt;/li&gt;
&lt;li&gt;体现系统中的全部设计理念
&lt;/li&gt;
&lt;li&gt;包括尽量少的实体，比如类、方法、函数等
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
&lt;p&gt;
读与写花费时间比例10:1,写新代码时，我们一直在读旧代码
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div id="outline-container-sec-1" class="outline-2"&gt;
&lt;h2 id="sec-1"&gt;命名&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-1"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;名副其实
&lt;ul class="org-ul"&gt;
&lt;li&gt;不应该用注释来解释变量
&lt;/li&gt;
&lt;li&gt;避免魔术数
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;避免误导
&lt;ul class="org-ul"&gt;
&lt;li&gt;比如说不要用 List 这种变量
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;做有意义的区分
&lt;ul class="org-ul"&gt;
&lt;li&gt;避免这种玩意，这三个有鬼区别？
&lt;pre class="example"&gt;
getActiveAccount();
getActiveAccounts();
getActiveAccountInfo();
&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;使用读的出来的名字
&lt;/li&gt;
&lt;li&gt;使用可搜索的名字
&lt;/li&gt;
&lt;li&gt;类名应该是名词
&lt;/li&gt;
&lt;li&gt;方法名应该是动词或动词短语
&lt;/li&gt;
&lt;li&gt;每个概念对应一个词
&lt;/li&gt;
&lt;li&gt;
&lt;/li&gt;&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;</description><guid>https://qiwulun.github.io/posts/dai-ma-zheng-ji-zhi-dao-yue-du-bi-ji-1.html</guid><pubDate>Fri, 23 Dec 2016 03:02:47 GMT</pubDate></item><item><title>用 docker 来打包 spacemacs</title><link>https://qiwulun.github.io/posts/yong-docker-lai-da-bao-spacemacs.html</link><dc:creator>Zhao JI</dc:creator><description>&lt;div id="table-of-contents"&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id="text-table-of-contents"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://qiwulun.github.io/posts/yong-docker-lai-da-bao-spacemacs.html#sec-1"&gt;org-mode&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://qiwulun.github.io/posts/yong-docker-lai-da-bao-spacemacs.html#sec-1-1"&gt;figure&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://qiwulun.github.io/posts/yong-docker-lai-da-bao-spacemacs.html#sec-1-1-1"&gt;ditaa&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://qiwulun.github.io/posts/yong-docker-lai-da-bao-spacemacs.html#sec-1-1-2"&gt;graphviz&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://qiwulun.github.io/posts/yong-docker-lai-da-bao-spacemacs.html#sec-1-1-3"&gt;plantuml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://qiwulun.github.io/posts/yong-docker-lai-da-bao-spacemacs.html#sec-1-1-4"&gt;asymptote&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://qiwulun.github.io/posts/yong-docker-lai-da-bao-spacemacs.html#sec-1-2"&gt;pdf&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://qiwulun.github.io/posts/yong-docker-lai-da-bao-spacemacs.html#sec-1-2-1"&gt;export&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://qiwulun.github.io/posts/yong-docker-lai-da-bao-spacemacs.html#sec-1-2-2"&gt;view&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://qiwulun.github.io/posts/yong-docker-lai-da-bao-spacemacs.html#sec-1-3"&gt;html-blog&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://qiwulun.github.io/posts/yong-docker-lai-da-bao-spacemacs.html#sec-1-3-1"&gt;&lt;span class="done DONE"&gt;DONE&lt;/span&gt; nikola&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://qiwulun.github.io/posts/yong-docker-lai-da-bao-spacemacs.html#sec-2"&gt;&lt;span class="done DONE"&gt;DONE&lt;/span&gt; 翻墙&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://qiwulun.github.io/posts/yong-docker-lai-da-bao-spacemacs.html#sec-2-1"&gt;google translate&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;div id="outline-container-sec-1" class="outline-2"&gt;
&lt;h2 id="sec-1"&gt;org-mode&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-1"&gt;
&lt;/div&gt;&lt;div id="outline-container-sec-1-1" class="outline-3"&gt;
&lt;h3 id="sec-1-1"&gt;figure&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-1-1"&gt;
&lt;/div&gt;&lt;div id="outline-container-sec-1-1-1" class="outline-4"&gt;
&lt;h4 id="sec-1-1-1"&gt;ditaa&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-1-1-1"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    +-----------+        +---------+  
    |    PLC    |        |         |                
    |  Network  +&amp;lt;------&amp;gt;+   PLC   +&amp;lt;---=---------+ 
    |    cRED   |        |  c707   |              | 
    +-----------+        +----+----+              | 
			      ^                   | 
			      |                   | 
			      |  +----------------|-----------------+
			      |  |                |                 |
			      v  v                v                 v
      +----------+       +----+--+--+      +-------+---+      +-----+-----+       Windows clients
      |          |       |          |      |           |      |           |      +----+      +----+
      | Database +&amp;lt;-----&amp;gt;+  Shared  +&amp;lt;----&amp;gt;+ Executive +&amp;lt;-=--&amp;gt;+ Operator  +&amp;lt;----&amp;gt;|cYEL| . . .|cYEL|
      |   c707   |       |  Memory  |      |   c707    |      | Server    |      |    |      |    |
      +--+----+--+       |{d} cGRE  |      +------+----+      |   c707    |      +----+      +----+
	 ^    ^          +----------+             ^           +-------+---+
	 |    |                                   |                        
	 |    +--------=--------------------------+                    
	 v                                                             
+--------+--------+                                                         
|                 |                                                         
| Millwide System |            -------- Data ---------                      
| cBLU            |            --=----- Signals ---=--                      
+-----------------+
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;div id="outline-container-sec-1-1-2" class="outline-4"&gt;
&lt;h4 id="sec-1-1-2"&gt;graphviz&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-1-1-2"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;digraph G {
  size="8,6"
  ratio=expand
  edge [dir=both]
  plcnet [shape=box, label="PLC Network"]
  subgraph cluster_wrapline {
    label="Wrapline Control System"
    color=purple
    subgraph {
    rank=same
    exec
    sharedmem [style=filled, fillcolor=lightgrey, shape=box]
    }
    edge[style=dotted, dir=none]
    exec -&amp;gt; opserver
    exec -&amp;gt; db
    plc -&amp;gt; exec
    edge [style=line, dir=both]
    exec -&amp;gt; sharedmem
    sharedmem -&amp;gt; db
    plc -&amp;gt; sharedmem
    sharedmem -&amp;gt; opserver
  }
  plcnet -&amp;gt; plc [constraint=false]
  millwide [shape=box, label="Millwide System"]
  db -&amp;gt; millwide

  subgraph cluster_opclients {
    color=blue
    label="Operator Clients 示例"
    rankdir=LR
    labelloc=b
    node[label=client]
    opserver -&amp;gt; client1
    opserver -&amp;gt; client2
    opserver -&amp;gt; client3
  }
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;div id="outline-container-sec-1-1-3" class="outline-4"&gt;
&lt;h4 id="sec-1-1-3"&gt;plantuml&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-1-1-3"&gt;
&lt;p&gt;
test
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Alice -&amp;gt; Bob: synchronous call
Alice -&amp;gt;&amp;gt; Bob: asynchronous call
Alice -&amp;gt;&amp;gt; Bob: asynchronous call
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;div id="outline-container-sec-1-1-4" class="outline-4"&gt;
&lt;h4 id="sec-1-1-4"&gt;asymptote&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-1-1-4"&gt;
&lt;p&gt;
&lt;span class="timestamp-wrapper"&gt;&lt;span class="timestamp"&gt;[2016-12-21 三 01:30]&lt;/span&gt;&lt;/span&gt; 
&lt;/p&gt;
&lt;/div&gt;

&lt;ul class="org-ul"&gt;&lt;li&gt;&lt;a id="sec-1-1-4-1" name="sec-1-1-4-1"&gt;&lt;/a&gt;三维，记得要带 &lt;code&gt;:cmdline -render=0&lt;/code&gt;&lt;br&gt;&lt;div class="outline-text-5" id="text-1-1-4-1"&gt;
&lt;p&gt;
不然要用显卡，不适合docker
&lt;/p&gt;

&lt;p&gt;
test 
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="n"&gt;three&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nf"&gt;size&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;560&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;320&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;IgnoreAspect&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nf"&gt;size3&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;140&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;80&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;currentprojection&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;perspective&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;up&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nf"&gt;Y&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;currentlight&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;White&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kt"&gt;real&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=-&lt;/span&gt;&lt;span class="mf"&gt;0.4&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kt"&gt;real&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.95&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kt"&gt;real&lt;/span&gt; &lt;span class="n"&gt;y1&lt;/span&gt;&lt;span class="o"&gt;=-&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kt"&gt;real&lt;/span&gt; &lt;span class="n"&gt;y2&lt;/span&gt;&lt;span class="o"&gt;=-&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="n"&gt;y1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kt"&gt;path&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;&lt;span class="nf"&gt;dir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nf"&gt;dir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;89.5&lt;/span&gt;&lt;span class="p"&gt;)}(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;y2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kt"&gt;path&lt;/span&gt; &lt;span class="n"&gt;B&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;y1&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;&lt;span class="nf"&gt;dir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;88.3&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nf"&gt;dir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)}(&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kt"&gt;real&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kt"&gt;pair&lt;/span&gt; &lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mf"&gt;2.5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kt"&gt;transform&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nf"&gt;scale&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kt"&gt;transform&lt;/span&gt; &lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nf"&gt;inverse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;scale&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;yy&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xx&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="nf"&gt;path&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nf"&gt;shift&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mf"&gt;1.979&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nf"&gt;scale&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;0.01&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;
  &lt;span class="nf"&gt;texpath&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;Label&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"{\it symptote}"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mf"&gt;0.25&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nv"&gt;E&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mf"&gt;0.169&lt;/span&gt;&lt;span class="nv"&gt;S&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nf"&gt;fontsize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="nv"&gt;pt&lt;/span&gt;&lt;span class="p"&gt;)));&lt;/span&gt;
&lt;span class="kt"&gt;pair&lt;/span&gt; &lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mf"&gt;1.7&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kt"&gt;pair&lt;/span&gt; &lt;span class="n"&gt;u&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nf"&gt;intersectionpoint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kt"&gt;real&lt;/span&gt; &lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.25&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nf"&gt;linewidth&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="kt"&gt;real&lt;/span&gt; &lt;span class="n"&gt;hy&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;hy&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;hy&lt;/span&gt;&lt;span class="p"&gt;)..(&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;hy&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)..(&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;hy&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;hy&lt;/span&gt;&lt;span class="p"&gt;)..(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;hy&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)..&lt;/span&gt;&lt;span class="k"&gt;cycle&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;y1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;y2&lt;/span&gt;&lt;span class="p"&gt;)..(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;y2&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;)..(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;y2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;y1&lt;/span&gt;&lt;span class="p"&gt;)..(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;y1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;)..&lt;/span&gt;&lt;span class="k"&gt;cycle&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;shift&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;u&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;hy&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;hy&lt;/span&gt;&lt;span class="p"&gt;)..(&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;hy&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)..(&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;hy&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;u&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;hy&lt;/span&gt;&lt;span class="p"&gt;)..(&lt;/span&gt;&lt;span class="n"&gt;u&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;hy&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)..&lt;/span&gt;&lt;span class="k"&gt;cycle&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="kt"&gt;real&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.75&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;point&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nf"&gt;shift&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;hy&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nf"&gt;point&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nf"&gt;shift&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;hy&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nf"&gt;reverse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="k"&gt;cycle&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;point&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;B&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nf"&gt;shift&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;hy&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;B&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nf"&gt;point&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;B&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nf"&gt;shift&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;hy&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nf"&gt;reverse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;B&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="k"&gt;cycle&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kt"&gt;triple&lt;/span&gt; &lt;span class="n"&gt;H&lt;/span&gt;&lt;span class="o"&gt;=-&lt;/span&gt;&lt;span class="mf"&gt;0.1&lt;/span&gt;&lt;span class="nf"&gt;Z&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;material&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;material&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;lightgray&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;shininess&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;path&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nf"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;extrude&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;H&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kt"&gt;surface&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nf"&gt;surface&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nf"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;red&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;nolight&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nf"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;shift&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;H&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;

&lt;li&gt;&lt;a id="sec-1-1-4-2" name="sec-1-1-4-2"&gt;&lt;/a&gt;二维 带变量&lt;br&gt;&lt;div class="outline-text-5" id="text-1-1-4-2"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="n"&gt;geometry&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 

&lt;span class="nf"&gt;size&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="nv"&gt;cm&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kt"&gt;picture&lt;/span&gt; &lt;span class="n"&gt;pic&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c"&gt;// on définit une courbe reliant les points (0,1) et (1,0)&lt;/span&gt;
&lt;span class="kt"&gt;path&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;&lt;span class="nf"&gt;dir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)}..{&lt;/span&gt;&lt;span class="nf"&gt;dir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)}(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c"&gt;// à l'aide de trois rotations, on définit &lt;/span&gt;
&lt;span class="c"&gt;// le motif (dans un carré de 2 sur 2) ...&lt;/span&gt;
&lt;span class="kt"&gt;path&lt;/span&gt; &lt;span class="n"&gt;motif&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nf"&gt;buildcycle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nf"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;90&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
		      &lt;span class="nf"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;180&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nf"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;90&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nf"&gt;filldraw&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pic&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;motif&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;lightred&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nv"&gt;white&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;black&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c"&gt;// ... et une double boucle pour "paver" &lt;/span&gt;
&lt;span class="c"&gt;// suivant (Ox) et suivant (Oy)&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;
	&lt;span class="nf"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;shift&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;pic&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;div id="outline-container-sec-1-2" class="outline-3"&gt;
&lt;h3 id="sec-1-2"&gt;pdf&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-1-2"&gt;
&lt;/div&gt;&lt;div id="outline-container-sec-1-2-1" class="outline-4"&gt;
&lt;h4 id="sec-1-2-1"&gt;export&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-1-2-1"&gt;
&lt;p&gt;
test:直接输出这个 pdf
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-1-2-2" class="outline-4"&gt;
&lt;h4 id="sec-1-2-2"&gt;view&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-1-2-2"&gt;
&lt;p&gt;
&lt;span class="timestamp-wrapper"&gt;&lt;span class="timestamp"&gt;[2016-12-20 二 23:54]&lt;/span&gt;&lt;/span&gt; 
&lt;/p&gt;

&lt;p&gt;
test:在emacs中打开这个pdf,  &lt;code&gt;SPC m n&lt;/code&gt; 可以转换成夜间模式
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-sec-1-3" class="outline-3"&gt;
&lt;h3 id="sec-1-3"&gt;html-blog&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-1-3"&gt;
&lt;/div&gt;&lt;div id="outline-container-sec-1-3-1" class="outline-4"&gt;
&lt;h4 id="sec-1-3-1"&gt;&lt;span class="done DONE"&gt;DONE&lt;/span&gt; nikola&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-1-3-1"&gt;
&lt;p&gt;
在 dockerfile 中定义了 LANG 等 local 就可以用了
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-2" class="outline-2"&gt;
&lt;h2 id="sec-2"&gt;&lt;span class="done DONE"&gt;DONE&lt;/span&gt; 翻墙&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-2"&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-2-1" class="outline-3"&gt;
&lt;h3 id="sec-2-1"&gt;google translate&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-2-1"&gt;
&lt;p&gt;
&lt;code&gt;SPC x g l&lt;/code&gt; 选择 en 到 zh-CN
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description><guid>https://qiwulun.github.io/posts/yong-docker-lai-da-bao-spacemacs.html</guid><pubDate>Wed, 21 Dec 2016 14:41:18 GMT</pubDate></item><item><title>Docker 中运行 GUI APP</title><link>https://qiwulun.github.io/posts/docker-zhong-yun-xing-gui-app.html</link><dc:creator>Zhao JI</dc:creator><description>&lt;p&gt;
在这里书写你的文章。
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ curl -fsSL https://get.docker.com/ | sh

$ sudo service docker start

$ xauth list

$ sudo docker run -i -t --net=host -e DISPLAY -v /tmp/.X11-unix ubuntu bash

# Inside container:
$ apt-get install firefox
$ apt-get install xauth
$ xauth add ...
&lt;/pre&gt;&lt;/div&gt;</description><guid>https://qiwulun.github.io/posts/docker-zhong-yun-xing-gui-app.html</guid><pubDate>Sat, 17 Dec 2016 14:09:26 GMT</pubDate></item><item><title>docker image 太慢的解决方法之 VPS</title><link>https://qiwulun.github.io/posts/docker-image-tai-man-de-jie-jue-fang-fa-zhi-vps.html</link><dc:creator>Zhao JI</dc:creator><description>&lt;p&gt;
假设我们要下载的 image 是 phusion/baseimage:0.9.19
&lt;/p&gt;

&lt;ul class="org-ul"&gt;
&lt;li&gt;在远端 VPS 上
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;code&gt;docker pull phusion/baseimage:0.9.19&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker save phusion/baseimage /baseimage.tar&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;在本地
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;code&gt;scp root@path_to_vps:/baseimage.tar ~/baseimage.tar&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo docker load &amp;lt; ~/baseimage.tar&lt;/code&gt; 
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description><guid>https://qiwulun.github.io/posts/docker-image-tai-man-de-jie-jue-fang-fa-zhi-vps.html</guid><pubDate>Sat, 17 Dec 2016 08:31:06 GMT</pubDate></item><item><title>Github 学生礼包之 Digital Ocean</title><link>https://qiwulun.github.io/posts/github-xue-sheng-li-bao-zhi-digital-ocean.html</link><dc:creator>Zhao JI</dc:creator><description>&lt;div id="table-of-contents"&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id="text-table-of-contents"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://qiwulun.github.io/posts/github-xue-sheng-li-bao-zhi-digital-ocean.html#sec-1"&gt;初次登录&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://qiwulun.github.io/posts/github-xue-sheng-li-bao-zhi-digital-ocean.html#sec-2"&gt;docker&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://qiwulun.github.io/posts/github-xue-sheng-li-bao-zhi-digital-ocean.html#sec-2-1"&gt;seafile&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://qiwulun.github.io/posts/github-xue-sheng-li-bao-zhi-digital-ocean.html#sec-2-1-1"&gt;Setup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://qiwulun.github.io/posts/github-xue-sheng-li-bao-zhi-digital-ocean.html#sec-2-1-2"&gt;Running Seafile&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://qiwulun.github.io/posts/github-xue-sheng-li-bao-zhi-digital-ocean.html#sec-2-2"&gt;安装 Shadowsocks&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://qiwulun.github.io/posts/github-xue-sheng-li-bao-zhi-digital-ocean.html#sec-3"&gt;Shadowsocks&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://qiwulun.github.io/posts/github-xue-sheng-li-bao-zhi-digital-ocean.html#sec-3-1"&gt;服务端配置&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://qiwulun.github.io/posts/github-xue-sheng-li-bao-zhi-digital-ocean.html#sec-3-2"&gt;Ubuntu 客户端设置&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://qiwulun.github.io/posts/github-xue-sheng-li-bao-zhi-digital-ocean.html#sec-3-3"&gt;chrome 设置&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://qiwulun.github.io/posts/github-xue-sheng-li-bao-zhi-digital-ocean.html#sec-3-3-1"&gt;自动切换&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://qiwulun.github.io/posts/github-xue-sheng-li-bao-zhi-digital-ocean.html#sec-3-4"&gt;后台启动&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://qiwulun.github.io/posts/github-xue-sheng-li-bao-zhi-digital-ocean.html#sec-3-5"&gt;使用proxychains-ng实现终端代理&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://qiwulun.github.io/posts/github-xue-sheng-li-bao-zhi-digital-ocean.html#sec-3-5-1"&gt;配置&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://qiwulun.github.io/posts/github-xue-sheng-li-bao-zhi-digital-ocean.html#sec-3-5-2"&gt;测试&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://qiwulun.github.io/posts/github-xue-sheng-li-bao-zhi-digital-ocean.html#sec-3-5-3"&gt;优化 alias&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://qiwulun.github.io/posts/github-xue-sheng-li-bao-zhi-digital-ocean.html#sec-3-5-4"&gt;使用 &lt;code&gt;proxychains emacs&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://qiwulun.github.io/posts/github-xue-sheng-li-bao-zhi-digital-ocean.html#sec-4"&gt;seafile&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;div id="outline-container-sec-1" class="outline-2"&gt;
&lt;h2 id="sec-1"&gt;初次登录&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-1"&gt;
&lt;pre class="example"&gt;
ssh root@SERVER_IP_ADDRESS
&lt;/pre&gt;

&lt;p&gt;
如果在创建的时候把公钥放上去了，那么就可以直接登录了
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-sec-2" class="outline-2"&gt;
&lt;h2 id="sec-2"&gt;docker&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-2"&gt;
&lt;/div&gt;&lt;div id="outline-container-sec-2-1" class="outline-3"&gt;
&lt;h3 id="sec-2-1"&gt;seafile&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-2-1"&gt;
&lt;p&gt;
&lt;a href="https://hub.docker.com/r/jenserat/seafile/"&gt;https://hub.docker.com/r/jenserat/seafile/&lt;/a&gt;
&lt;/p&gt;


&lt;p&gt;
This Dockerfile does not really package Seafile 5 for Docker, but provides an environment for running it including startup scripts, including all dependencies for both a SQLite or MySQL (requires external MySQL database, for example in another container) setup.
&lt;/p&gt;
&lt;/div&gt;
&lt;div id="outline-container-sec-2-1-1" class="outline-4"&gt;
&lt;h4 id="sec-2-1-1"&gt;Setup&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-2-1-1"&gt;
&lt;p&gt;
The image only prepares the base system and provides some support during installation. Read through the setup manual before setting up Seafile.
&lt;/p&gt;

&lt;p&gt;
Run the image in a container, exposing ports as needed and making /opt/seafile permanent. For setting seafile up, maintaining its configuration or performing updates, make sure to start a shell. As the image builds on phusion/baseimage, do so by attaching – /bin/bash as parameter.
&lt;/p&gt;

&lt;p&gt;
For example, you could use
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ mkdir seafile
$ docker run -t -i \
   -p 10001:10001 \
   -p 12001:12001 \
   -p 8000:8000 \
   -p 8080:8080 \
   -p 8082:8082 \
   -v /seafile:/opt/seafile \
   jenserat/seafile -- /bin/bash
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;
Consider using a reverse proxy for using HTTPs.
&lt;/p&gt;

&lt;p&gt;
After the container is started, run
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ download-seafile
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;
to download Seafile and prepare setting it up.
&lt;/p&gt;

&lt;p&gt;
Once downloaded, run
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;/opt/seafile/seafile-server-5.*/setup-seafile.sh
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;
, and go through the setup assistant. Do not change the port and storage location defaults, but change the run command appropriately.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;/opt/seafile/seafile-server-latest/seafile.sh
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;
start to start the seafile controller process.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;/opt/seafile/seafile-server-latest/seahub.sh
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;
start for configuring the web UI.
&lt;/p&gt;

&lt;p&gt;
If you want, do more configuration of Seafile. You can also already try it out.
Setting up Seafile is finished, exit the container.
&lt;/p&gt;

&lt;p&gt;
In case you want to use memcached instead of &lt;i&gt;tmp/seahub&lt;sub&gt;cache&lt;/sub&gt;&lt;/i&gt; add the following to your seahub&lt;sub&gt;settings&lt;/sub&gt;.py
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;CACHES&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="s1"&gt;'default'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s1"&gt;'BACKEND'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'django.core.cache.backends.memcached.MemcachedCache'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'LOCATION'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'memcached:11211'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
Link your memcached instance to your seafile container by adding –link memcached&lt;sub&gt;container&lt;/sub&gt;:memcached to your docker run statement.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-sec-2-1-2" class="outline-4"&gt;
&lt;h4 id="sec-2-1-2"&gt;Running Seafile&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-2-1-2"&gt;
&lt;p&gt;
Run the image again, this time you probably want to give it a name for using some startup scripts. You will not need an interactive shell for normal operation. The image will autostart the seafile and seahub processes if the environment variable autostart=true is set. A reasonable docker command is
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker run -d \
  --name seafile \
  -p 10001:10001 \
  -p 12001:12001 \
  -p 8000:8000 \
  -p 8080:8080 \
  -p 8082:8082 \
  -v seafile:/opt/seafile \
  -e autostart=true \
  jenserat/seafile
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;
For proxying Seafile using nginx, enable FastCGI by adding -e fastcgi=true.
&lt;/p&gt;

&lt;p&gt;
Updates and Maintenance
The Seafile binaries are stored in the permanent volume /opt/seafile. To update the base system, just stop and drop the container, update the image using docker pull jenserat/seafile and run it again. To update Seafile, follow the normal upgrade process described in the Seafile upgrade manual. download-seafile might help you with the first steps if already updated to the newest version.
&lt;/p&gt;

&lt;p&gt;
Workaround for Seafile issue #478
If used in FastCGI mode, like recommended when proxying WebDAV, seafdav only listens on localhost:8080; with consequence that it cannot be exposed. The image has a workaround built-in, which uses socat listening on 0.0.0.0:8080, forwarding to localhost:8081. To use it, modify /opt/seafile/conf/seafdav.conf and change the port to 8081, and restart the container enabling the workaround using -e workaround478=true.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-sec-2-2" class="outline-3"&gt;
&lt;h3 id="sec-2-2"&gt;安装 Shadowsocks&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-2-2"&gt;
&lt;p&gt;
拉取docker-shadowsocks镜像
拉取docker-shadowsocks镜像镜像安装，从 Docker Hub 仓库拉取命令如下（笔者未使用）
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker pull oddrationale/docker-shadowsocks

# 配置docker-shadowsocks
docker run --name shadowsocks -d -p 1080:1080 oddrationale/docker-shadowsocks -s 0.0.0.0 -p 1080 -k yourpasswd -m aes-256-cfb
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
输入如下命令：
&lt;/p&gt;

&lt;p&gt;
其中，
&lt;/p&gt;

&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;code&gt;-d&lt;/code&gt; ——容器启动后会进入后台
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-p&lt;/code&gt; （第一个）——指定要映射的端口，使用的格式是hostPort:containerPort，即本地的 54285 端口映射到容器的 54285 端口
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-s&lt;/code&gt; ——服务器IP
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-p&lt;/code&gt; （第二个）——代理端口
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;yourpasswd&lt;/code&gt; ——你的密码
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-m&lt;/code&gt; ——加密方式
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-sec-3" class="outline-2"&gt;
&lt;h2 id="sec-3"&gt;Shadowsocks&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-3"&gt;
&lt;/div&gt;&lt;div id="outline-container-sec-3-1" class="outline-3"&gt;
&lt;h3 id="sec-3-1"&gt;服务端配置&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-3-1"&gt;
&lt;pre class="example"&gt;
sudo apt install shadowsocks
&lt;/pre&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;{
"server":"0.0.0.0",
"server_port":5080,
"local_address": "127.0.0.1",
"local_port":5080,
"password":"password",
"timeout":600,
"method":"aes-256-cfb",
"fast_open": true
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;
启动ss服务：
&lt;code&gt;ssserver -c /etc/shadowsocks.json&lt;/code&gt;
&lt;/p&gt;

&lt;p&gt;
配置ss服务随系统启动：
$ sudo vim /etc/rc.local
在exit 0前加入一行：
ss-server -c /etc/config.json
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;div id="outline-container-sec-3-2" class="outline-3"&gt;
&lt;h3 id="sec-3-2"&gt;Ubuntu 客户端设置&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-3-2"&gt;
&lt;pre class="example"&gt;
sudo apt-get install python-pip
sudo pip install shadowsocks
&lt;/pre&gt;

&lt;p&gt;
比如 sslocal -s 11.22.33.44 -p 50003 -k "123456" -l 1080 -t 600 -m aes-256-cfb
&lt;/p&gt;

&lt;p&gt;
-s表示服务IP, -p指的是服务端的端口，-l是本地端口默认是1080, -k 是密码（要加""）, -t超时默认300,-m是加密方法默认aes-256-cfb，
&lt;/p&gt;

&lt;p&gt;
为了方便我推荐直接用sslcoal -c 配置文件路径 这样的方式，简单好用。
&lt;/p&gt;

&lt;p&gt;
我们可以在/home/mudao/ 下新建个文件shadowsocks.json  (mudao是我在我电脑上的用户名，这里路径你自己看你的)。内容是这样：
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;{
"server": "11.22.33.44",
"server_port":5080,
"local_port":5080,
"password":"password",
"timeout":600,
"method":"aes-256-cfb"
}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;
server  你服务端的IP，服务端可以写成0.0.0.0
servier&lt;sub&gt;port&lt;/sub&gt;  你服务端的端口
local&lt;sub&gt;port&lt;/sub&gt;  本地端口，一般默认1080
passwd  ss服务端设置的密码
timeout  超时设置 和服务端一样
method  加密方法 和服务端一样
&lt;/p&gt;

&lt;p&gt;
确定上面的配置文件没有问题，然后我们就可以在终端输入
&lt;code&gt;sslocal -c /path/to/shadowsocks.json&lt;/code&gt; 回车运行。
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-3-3" class="outline-3"&gt;
&lt;h3 id="sec-3-3"&gt;chrome 设置&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-3-3"&gt;
&lt;p&gt;
Switch Omega 中新建情景模式 ── 代理服务器 ── 代理协议:socks 5 地址 127.0.0.1 端口
&lt;/p&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-3-3-1" class="outline-4"&gt;
&lt;h4 id="sec-3-3-1"&gt;自动切换&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-3-3-1"&gt;
&lt;p&gt;
规则列表规则 Shadowsocks
&lt;/p&gt;

&lt;p&gt;
规则列表地址 &lt;a href="https://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt"&gt;https://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-sec-3-4" class="outline-3"&gt;
&lt;h3 id="sec-3-4"&gt;后台启动&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-3-4"&gt;
&lt;p&gt;
如果你上面可以代理上网了可以进行这一步，之前我让你不要关掉终端，因为关掉终端的时候代理就随着关闭了，之后你每次开机或者关掉终端之后，下次你再想用代理就要重新在终端输入这样的命令 sslocal  -c /home/mudao/shadowsocks.json ，挺麻烦是不？
&lt;/p&gt;

&lt;p&gt;
我们现在可以在你的ubuntu上安装一个叫做supervisor的程序来管理你的sslocal启动。关于supervisor更多点击这
&lt;/p&gt;

&lt;p&gt;
sudo apt-get install supervisor
&lt;/p&gt;

&lt;p&gt;
安装好后我们可以在/etc/supervisor/目录下找到supervisor.conf配置文件，我们可以用以下命令来编辑
&lt;/p&gt;

&lt;p&gt;
sudo gedit /etc/supervisor/supervisor.conf
&lt;/p&gt;

&lt;p&gt;
在这个文件的最后加上以下内容
&lt;/p&gt;

&lt;p&gt;
[program:shadowsocks]
command=sslocal -c /home/mudao/shadowsocks.json
autostart=true
autorestart=true
user=root
log&lt;sub&gt;stderr&lt;/sub&gt;=true
logfile=/var/log/shadowsocks.log
&lt;/p&gt;

&lt;p&gt;
当然在16.04里你可以直接在/etc/supervisor/conf.d/下新建个文件比如ss.conf然后加入上面内容。
&lt;/p&gt;

&lt;p&gt;
command = 这里json文件的路径根据你的文件路径来填写。确认无误后记得保存。sslocal 和ssserver这两个命令是被存在 /usr/local/bin/下面的，我们要拷贝一份命令文件到/bin
&lt;/p&gt;

&lt;p&gt;
sudo cp /usr/local/bin/sslocal /bin  (注意空格)
&lt;/p&gt;

&lt;p&gt;
注意：16.04 命令在 /usr/bin/下所以就用
&lt;/p&gt;

&lt;p&gt;
sudo cp /usr/bin/sslocal /bin  (注意空格)
&lt;/p&gt;

&lt;p&gt;
现在关掉你之前运行sslocal命令的终端，再打开终端输入sudo service supervisor restart 然后去打开浏览器看看可不可以继续代理上网。你也可以用ps -ef|grep sslocal命令查看sslocal是否在运行。
&lt;/p&gt;

&lt;p&gt;
这个时候我们需要在/etc下编辑一个叫rc.local的文件 ，让supervisor开机启动。
&lt;/p&gt;

&lt;p&gt;
sudo gedit /etc/rc.local 
&lt;/p&gt;

&lt;p&gt;
在这个配置文件的exit 0前面一行加上 service supervisor start 保存。看你是否配置成功你可以在现在关机重启之后直接打开浏览器看是否代理成功。
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-sec-3-5" class="outline-3"&gt;
&lt;h3 id="sec-3-5"&gt;使用proxychains-ng实现终端代理&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-3-5"&gt;
&lt;p&gt;
&lt;code&gt;sudo apt install proxychains&lt;/code&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;div id="outline-container-sec-3-5-1" class="outline-4"&gt;
&lt;h4 id="sec-3-5-1"&gt;配置&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-3-5-1"&gt;
&lt;p&gt;
编辑配置文件 vim /etc/proxychains.conf
&lt;/p&gt;

&lt;p&gt;
在 [ProxyList] 下面（也就是末尾）加入代理类型，代理地址和端口
&lt;/p&gt;

&lt;p&gt;
例如使用 TOR 代理，注释掉原来的代理并添加 &lt;code&gt;socks5 127.0.0.1 1080&lt;/code&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-sec-3-5-2" class="outline-4"&gt;
&lt;h4 id="sec-3-5-2"&gt;测试&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-3-5-2"&gt;
&lt;p&gt;
proxychains4 curl google.com
&lt;/p&gt;

&lt;p&gt;
注意：proxychains支持的是socks，http, https协议.它们以tcp或者udp协议为基础, ping命令用的是 ICMP 协议， proxychains 不支持;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-sec-3-5-3" class="outline-4"&gt;
&lt;h4 id="sec-3-5-3"&gt;优化 alias&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-3-5-3"&gt;
&lt;p&gt;
alias pc="proxychains4"
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-sec-3-5-4" class="outline-4"&gt;
&lt;h4 id="sec-3-5-4"&gt;使用 &lt;code&gt;proxychains emacs&lt;/code&gt;&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-3-5-4"&gt;
&lt;p&gt;
这样在下面就可以使用 google translate 了
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-sec-4" class="outline-2"&gt;
&lt;h2 id="sec-4"&gt;seafile&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-4"&gt;
&lt;p&gt;
&lt;a href="https://www.digitalocean.com/community/tutorials/how-to-install-and-configure-seafile-on-an-ubuntu-12-04-vps"&gt;https://www.digitalocean.com/community/tutorials/how-to-install-and-configure-seafile-on-an-ubuntu-12-04-vps&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</description><guid>https://qiwulun.github.io/posts/github-xue-sheng-li-bao-zhi-digital-ocean.html</guid><pubDate>Thu, 15 Dec 2016 02:55:07 GMT</pubDate></item><item><title>github 学生礼包</title><link>https://qiwulun.github.io/posts/github-xue-sheng-li-bao.html</link><dc:creator>Zhao JI</dc:creator><description>&lt;ol class="org-ol"&gt;
&lt;li&gt;&lt;a href="https://github.com/settings/emails"&gt;https://github.com/settings/emails&lt;/a&gt; 里面设上学校的邮箱
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://education.github.com/"&gt;https://education.github.com/&lt;/a&gt; 开始申请
&lt;/li&gt;
&lt;li&gt;福利如下：
&lt;dl class="org-dl"&gt;
&lt;dt&gt; We've upgraded you to a plan with unlimited free private repositories &lt;/dt&gt;&lt;dd&gt;        which will be free for the next two years. After that, you'll get an
email saying that your coupon is expiring. You can reapply for another
coupon if you still have academic status. We don't have any
collaboration limits, so any group projects you may encounter can be
hosted via your account.
&lt;/dd&gt;
&lt;dt&gt; Student Developer Pack &lt;/dt&gt;&lt;dd&gt;        available at: &lt;a href="https://education.github.com/pack"&gt;https://education.github.com/pack&lt;/a&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;/ol&gt;</description><guid>https://qiwulun.github.io/posts/github-xue-sheng-li-bao.html</guid><pubDate>Wed, 14 Dec 2016 09:55:18 GMT</pubDate></item><item><title>Poker 升级版机械键盘</title><link>https://qiwulun.github.io/posts/poker-sheng-ji-ban-ji-jie-jian-pan.html</link><dc:creator>Zhao JI</dc:creator><description>&lt;div id="table-of-contents"&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id="text-table-of-contents"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://qiwulun.github.io/posts/poker-sheng-ji-ban-ji-jie-jian-pan.html#sec-1"&gt;标准模式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://qiwulun.github.io/posts/poker-sheng-ji-ban-ji-jie-jian-pan.html#sec-2"&gt;指拨开关&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://qiwulun.github.io/posts/poker-sheng-ji-ban-ji-jie-jian-pan.html#sec-3"&gt;自定义&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://qiwulun.github.io/posts/poker-sheng-ji-ban-ji-jie-jian-pan.html#sec-4"&gt;说明书&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://qiwulun.github.io/posts/poker-sheng-ji-ban-ji-jie-jian-pan.html#sec-5"&gt;我的知乎回答&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
先说一句，红轴打起来好舒服，白色看起来好漂亮
&lt;/p&gt;

&lt;div id="outline-container-sec-1" class="outline-2"&gt;
&lt;h2 id="sec-1"&gt;标准模式&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-1"&gt;
&lt;table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides"&gt;


&lt;colgroup&gt;
&lt;col class="left"&gt;

&lt;col class="left"&gt;
&lt;/colgroup&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class="left"&gt;方向键&lt;/td&gt;
&lt;td class="left"&gt;Fn+a,s,d,w&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="left"&gt;Home&lt;/td&gt;
&lt;td class="left"&gt;Fn+;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="left"&gt;END&lt;/td&gt;
&lt;td class="left"&gt;Fn+.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;
ctrl+左右方向键,移动单词.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-2" class="outline-2"&gt;
&lt;h2 id="sec-2"&gt;指拨开关&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-2"&gt;

&lt;div class="figure"&gt;
&lt;p&gt;&lt;img src="https://qiwulun.github.io/images/%E6%8C%87%E6%8B%A8%E5%BC%80%E5%85%B3/screenshot_2016-12-13_15-23-47.png" alt="screenshot_2016-12-13_15-23-47.png"&gt;
&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;
1 2 3 全部点下去之后
&lt;/p&gt;

&lt;ul class="org-ul"&gt;
&lt;li&gt;CAPS 是 &lt;code&gt;FN&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;左 win 是 &lt;code&gt;CAPS&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;右 CTRL 是 &lt;code&gt;`~&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;这样就没有 &lt;code&gt;win&lt;/code&gt; 键了，我们绑到 &lt;code&gt;PN SPC&lt;/code&gt; 上吧 
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-sec-3" class="outline-2"&gt;
&lt;h2 id="sec-3"&gt;自定义&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-3"&gt;
&lt;p&gt;
Poker 升级版似乎不支持 FN 组合键的直接绑定， 绑的都是 PN+FN，那么绑定FN+A = HOME 
这种 emacs 绑定似乎就不太合适了
&lt;/p&gt;

&lt;table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides"&gt;


&lt;colgroup&gt;
&lt;col class="left"&gt;

&lt;col class="left"&gt;

&lt;col class="left"&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope="col" class="left"&gt;组合键&lt;/th&gt;
&lt;th scope="col" class="left"&gt;绑定内容&lt;/th&gt;
&lt;th scope="col" class="left"&gt;功能&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class="left"&gt;pn + h,j,k,l&lt;/td&gt;
&lt;td class="left"&gt;四个方向键&lt;/td&gt;
&lt;td class="left"&gt;光标移动&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="left"&gt;PN + ESC&lt;/td&gt;
&lt;td class="left"&gt;Win 键&lt;/td&gt;
&lt;td class="left"&gt;Win&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="left"&gt;PN + 0&lt;/td&gt;
&lt;td class="left"&gt;Home 键&lt;/td&gt;
&lt;td class="left"&gt;行首&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="left"&gt;PN + 4&lt;/td&gt;
&lt;td class="left"&gt;End 键&lt;/td&gt;
&lt;td class="left"&gt;行尾&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="left"&gt;PN + d&lt;/td&gt;
&lt;td class="left"&gt;Del 键&lt;/td&gt;
&lt;td class="left"&gt;删除&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="left"&gt;PN + w&lt;/td&gt;
&lt;td class="left"&gt;Ctrl + -&amp;gt;&lt;/td&gt;
&lt;td class="left"&gt;按词前进&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="left"&gt;PN + b&lt;/td&gt;
&lt;td class="left"&gt;Ctrl + &amp;lt;-&lt;/td&gt;
&lt;td class="left"&gt;按词后退&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="left"&gt;PN + x&lt;/td&gt;
&lt;td class="left"&gt;Ctrl + x&lt;/td&gt;
&lt;td class="left"&gt;剪切&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="left"&gt;PN + p&lt;/td&gt;
&lt;td class="left"&gt;Ctrl + v&lt;/td&gt;
&lt;td class="left"&gt;粘贴&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="left"&gt;PN + u&lt;/td&gt;
&lt;td class="left"&gt;Ctrl + z&lt;/td&gt;
&lt;td class="left"&gt;撤消&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="left"&gt;PN + r&lt;/td&gt;
&lt;td class="left"&gt;Ctrl + y&lt;/td&gt;
&lt;td class="left"&gt;重做&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="left"&gt;PN + v&lt;/td&gt;
&lt;td class="left"&gt;FN + z&lt;/td&gt;
&lt;td class="left"&gt;（伪）Visual 模式（要配合Shift）&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;
这就实现了 Toggle 模式下的简单的 Vim 模式
&lt;/p&gt;

&lt;dl class="org-dl"&gt;
&lt;dt&gt; Toggle 模式 &lt;/dt&gt;&lt;dd&gt;&lt;code&gt;Fn 右 Shift&lt;/code&gt; 进入 &lt;code&gt;Toggle&lt;/code&gt; 模式，这个时候可以不用按 PN 键了
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-sec-4" class="outline-2"&gt;
&lt;h2 id="sec-4"&gt;说明书&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-4"&gt;

&lt;div class="figure"&gt;
&lt;p&gt;&lt;img src="https://qiwulun.github.io/images/screenshot_2016-12-13_16-24-05.png" alt="screenshot_2016-12-13_16-24-05.png"&gt;
&lt;/p&gt;
&lt;/div&gt;



&lt;div class="figure"&gt;
&lt;p&gt;&lt;img src="https://qiwulun.github.io/images/screenshot_2016-12-13_16-24-19.png" alt="screenshot_2016-12-13_16-24-19.png"&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-sec-5" class="outline-2"&gt;
&lt;h2 id="sec-5"&gt;我的知乎回答&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-5"&gt;
&lt;p&gt;
&lt;a href="https://www.zhihu.com/question/24453206/answer/135706176"&gt;https://www.zhihu.com/question/24453206/answer/135706176&lt;/a&gt;
&lt;/p&gt;

&lt;pre class="example"&gt;
入手的 poker 升级版,还是很值得入的. 介绍两个觉得很好玩的地方

1. 灵活的指拨开关
poker 没有独立的方向键,只能使用FN+ASWD方向键的位置(我们用 Poker 2的图来做示意)
而FN在右手侧,这样按方向键就要用两只手...如果你还要用鼠标,那是挺崩溃的
好在 Poker 提供了键盘背面的 4 个拨动开关，他们的功能是控制按键的切换
开关 1：Caps 与左 Win 切换
开关 2：右 Ctrl 与 ` ~ 切换
开关 3：左 Win 与 Fn 切换
开关 4：键盘写保护，键位编程
也就是说,我们可以通过把 开关1和3 拨到ON的位置,实现 CAPSLOCK 变成 FN 的功能.而左Win变成 CAPSLOCK,没有 Win 键了. 这就意味着左手一只手就可以在不离开主键盘区的情况下, 输入上下左右,相比全键盘的时候,扭着右手去找方向键是要舒服不少的.

2. 自定义按键
提到 Poker 怎么能不说自定义按键呢,对吧. 这种硬件层面的绑定可以让你把每个编辑框变成 vim/emacs(的简易版)
For Emacser:
FN 换到 CAPS LOCK 之后, 绑定FN+A = 光标到行首, 这种 emacs 绑定是最舒服的.
然而比较遗憾的是, Poker 升级版默认不支持 FN 组合键的直接绑定， 绑定FN+A, 要使用 PN+FN+A 才能触发，似乎就比较的麻烦.
所以把PN当成 Ctrl 来绑定可能更合适一点.
但如果大家和我一样是觉得PN 键的位置用右手外边缘来压有一点点纠结的话,那可以看看下面 VIM 的方法:)
For Vimers :
poker 提供了 Toggle 模式 : Fn + 右 Shift 键进入 Toggle 模式后,自设的组合键就可以不用按 PN 键了
这就相当于提供了一个 Normal 模式ლ(╹◡╹ლ)
比如我现在设置就是这样,可以四处的hjkl的感觉很奇妙
组合键	绑定内容	功能
pn + h,j,k,l	四个方向键	光标移动
PN + ESC	Win 键	Win
PN + 0	Home 键	行首
PN + 4	End 键	行尾
PN + d	Del 键	删除
PN + w	Ctrl + -&amp;gt;	按词前进
PN + b	Ctrl + &amp;lt;-	按词后退
PN + x	Ctrl + x	剪切
PN + p	Ctrl + v	粘贴
PN + u	Ctrl + z	撤消
PN + r	Ctrl + y	重做
PN + v	FN + z	（伪）Visual 模式（要配合Shift）


总之,这款键盘很适合折腾
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;</description><guid>https://qiwulun.github.io/posts/poker-sheng-ji-ban-ji-jie-jian-pan.html</guid><pubDate>Tue, 13 Dec 2016 07:09:58 GMT</pubDate></item></channel></rss>